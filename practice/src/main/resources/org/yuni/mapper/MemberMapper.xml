<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuni.mapper.MemberMapper">

	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 boardVO 는 mybatis-confg.xml 에 Alias 되어 
		있습니다. -->
	<select id="selectOne" resultType="org.yuni.domain.MemberVO">
		select userId,
		userPw,
		userEmail,
		userName,
		phone,
		gender,
		address,
		regDate,
		sms,
		accTerms,
		userRank
		 from member where userId = #{userId} 
		 
	</select>
	
		<select id="select" resultType="org.yuni.domain.MemberVO">
		select userId,
		userPw,
		userEmail,
		userName,
		phone,
		gender,
		address,
		regDate,
		sms,
		accTerms,
		userRank
		 from member where userId = #{userId} and
		 userPw = = #{userPw}
		 
	</select>
	
	<select id="login" resultType="org.yuni.domain.MemberVO">
		select userId, userPw, userName from
		member where userId = #{userId} and userPw = #{userPw}
	</select>
	
	<update id="update">
	update member set userEmail = #{userEmail}, userName = #{userName},
	phone = #{phone} ,address = #{address}, sms = #{sms}   where userId = #{userId}
	</update>
	
	<insert id="create">
		insert into member values(#{userId},#{userPw},#{userEmail}, #{userName},#{phone} ,#{gender},#{address}, sysdate, #{sms}, #{accTerms}, 1 )
	</insert>
	
	<update id="keepLogin">
		update member set sessionKey = #{sessionId}, sessionLimit = #{next} where
		userId = #{userId}
	</update>
	

	
</mapper>
